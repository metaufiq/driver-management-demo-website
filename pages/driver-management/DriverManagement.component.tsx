import type { NextPage } from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react';

import api from '../../api'
import { User as UserFromAPI, Params as APIParams } from "../../api/randomUser/randomUser.api.types";
import DriverCard from '../../components/DriverCard';
import { User } from '../../index.types';
import { SetUsers } from './DriverManagement.component.types';

const _convertUserToUserState = (user: UserFromAPI):User => ({
  email: user.email,
  dob: user.dob.date,
  firstName: user.name.first,
  lastName: user.name.last,
  username: user.login.username,
  phone: user.phone
})

const _getListUser = async (params: APIParams):Promise<User[]> => {
  const {results} = await api.randomUser.getListUser(params)

  const users = results.map(_convertUserToUserState)
  return users;
}

const _asyncInnit = async (setUsers: SetUsers)=>{
  const users = await _getListUser({results:30})

  setUsers(users)
}

const DriverManagement: NextPage = (props) => {
  const [users, setUsers] = useState<User[]>([]);
  
  useEffect(()=>{
    _asyncInnit(setUsers)
  }, [])

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <p>driver management page</p>
      {users.map(user=>(<DriverCard user={user}/>))}
    </div>
  )
}

export default DriverManagement
